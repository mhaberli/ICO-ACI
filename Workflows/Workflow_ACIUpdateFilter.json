[
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a filter",
      "Label": "Create a Filter Rollback",
      "Name": "CreateaFilterRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Specify a port for the filter (Example: 443)",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Port",
            "Name": "PORT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a filter",
      "Label": "Create a Filter",
      "Name": "CreateaFilter",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Specify a port for the filter (Example: 443)",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Port",
            "Name": "PORT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "Description": "Creates a filter",
          "InputParameters": {
            "NAME": "${task.input.NAME}",
            "PORT": "${task.input.PORT}",
            "Target": "${task.input.Target}"
          },
          "Name": "CreateaFilterRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Label": "Assign Filter to Contract Rollback",
      "Name": "AssignFiltertoContractRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Filter",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "FILTER",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "NameTenant",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Label": "Assign Filter to Contract",
      "Name": "AssignFiltertoContract",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Filter",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "FILTER",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "NameTenant",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "InputParameters": {
            "FILTER": "${task.input.FILTER}",
            "NAME": "${task.input.NAME}",
            "Target": "${task.input.Target}"
          },
          "Name": "AssignFiltertoContractRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.WorkflowDefinition",
      "DefaultVersion": true,
      "Description": "Update Filter in ACI",
      "InputDefinition": [
        {
          "CustomDataTypeProperties": {
            "CatalogMoid": "shared",
            "ObjectType": "workflow.CustomDataProperty"
          },
          "Default": {
            "ObjectType": "workflow.DefaultValue",
            "Override": true
          },
          "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "External Target",
          "Name": "Target",
          "ObjectType": "workflow.TargetDataType",
          "Properties": [
            {
              "DisplayAttributes": [
                "Name",
                "TargetType"
              ],
              "ObjectType": "workflow.TargetProperty",
              "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
              "SelectorProperty": {
                "Method": "GET",
                "ObjectType": "workflow.SelectorProperty"
              },
              "SupportedObjects": [
                "asset.Target"
              ]
            }
          ],
          "Required": true
        },
        {
          "ArrayItemType": {
            "ObjectType": "workflow.PrimitiveArrayItem",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "delete a port for the filter (Example: 443)",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Delete Port",
          "Max": 20,
          "Name": "DELETEPORT",
          "ObjectType": "workflow.ArrayDataType"
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Name of the tenant",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Name of Tenant",
          "Name": "NAME",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        },
        {
          "ArrayItemType": {
            "ObjectType": "workflow.PrimitiveArrayItem",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Specify a port for the filter (Example: 443)",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Add Port",
          "Max": 20,
          "Name": "PORT",
          "ObjectType": "workflow.ArrayDataType"
        }
      ],
      "InputParameterSet": [],
      "Label": "ACI Update Filter",
      "Name": "ACIUpdateFilter",
      "ObjectType": "workflow.WorkflowDefinition",
      "OutputDefinition": [],
      "Properties": {
        "EnableDebug": true,
        "ExternalMeta": true,
        "ObjectType": "workflow.WorkflowProperties",
        "SupportStatus": "Supported"
      },
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "category",
          "Value": "ACI"
        }
      ],
      "Tasks": [
        {
          "Name": "StartTask",
          "NextTask": "parallelLoop1",
          "ObjectType": "workflow.StartTask"
        },
        {
          "Name": "SuccessEndTask",
          "ObjectType": "workflow.SuccessEndTask"
        },
        {
          "Name": "FailureEndTask",
          "ObjectType": "workflow.FailureEndTask"
        },
        {
          "Count": "{{ len .global.workflow.input.DELETEPORT }}",
          "Description": "A Parallel Loop is a control task that runs one task or one sub-workflow multiple times based on a specified count.  The count can be a static value that is specified during design time or a dynamic value that is derived from workflow inputs or task outputs.  When the loop is executed, the count 'N' is determined, N tasks or sub-workflows are scheduled for execution in parallel.  When all N instances of the task or sub-workflow reach a final state the parallel loop will complete and workflow execution will move on to the next task.  If any one of the tasks or sub-workflows fails, then the entire loop will fail.  Dynamic values for count must be specified as a template.  For example, if a loop must run for a count which matches the length of a workflow input called StringArray, then the count must be specified using a template '{{ len .global.workflow.input.StringArray }}'.  The iteration of the loop is available using the keyword '.iteration' and it can be used to control inputs that feed into the task.  For example, the task inside the loop needs to take one value from the workflow input StringArray, then the task string input can be mapped to the template '{{ index .global.workflow.input.StringArray .iteration}}' during design.",
          "Label": "For each Filter to delete",
          "LoopStartTask": "CreateaFilterRollback1",
          "Name": "parallelLoop1",
          "NumberOfBatches": 1,
          "ObjectType": "workflow.LoopTask",
          "OnSuccess": "parallelLoop3",
          "Parallel": true
        },
        {
          "CatalogMoid": "user",
          "Description": "Creates a filter",
          "InputParameters": {
            "NAME": "${workflow.input.NAME}",
            "PORT": "{{ index .global.workflow.input.DELETEPORT .iteration}}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Create a Filter Rollback",
          "Name": "CreateaFilterRollback1",
          "ObjectType": "workflow.WorkerTask",
          "TaskDefinitionName": "CreateaFilterRollback",
          "Version": 1
        },
        {
          "Count": "{{ len .global.workflow.input.PORT }}",
          "Description": "A Parallel Loop is a control task that runs one task or one sub-workflow multiple times based on a specified count.  The count can be a static value that is specified during design time or a dynamic value that is derived from workflow inputs or task outputs.  When the loop is executed, the count 'N' is determined, N tasks or sub-workflows are scheduled for execution in parallel.  When all N instances of the task or sub-workflow reach a final state the parallel loop will complete and workflow execution will move on to the next task.  If any one of the tasks or sub-workflows fails, then the entire loop will fail.  Dynamic values for count must be specified as a template.  For example, if a loop must run for a count which matches the length of a workflow input called StringArray, then the count must be specified using a template '{{ len .global.workflow.input.StringArray }}'.  The iteration of the loop is available using the keyword '.iteration' and it can be used to control inputs that feed into the task.  For example, the task inside the loop needs to take one value from the workflow input StringArray, then the task string input can be mapped to the template '{{ index .global.workflow.input.StringArray .iteration}}' during design.",
          "Label": "For each FiIter to create",
          "LoopStartTask": "CreateaFilter1",
          "Name": "parallelLoop2",
          "NumberOfBatches": 1,
          "ObjectType": "workflow.LoopTask",
          "OnSuccess": "parallelLoop4",
          "Parallel": true
        },
        {
          "CatalogMoid": "user",
          "Description": "Creates a filter",
          "InputParameters": {
            "NAME": "${workflow.input.NAME}",
            "PORT": "{{ index .global.workflow.input.PORT .iteration}}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Create a Filter",
          "Name": "CreateaFilter1",
          "ObjectType": "workflow.WorkerTask",
          "TaskDefinitionName": "CreateaFilter",
          "Version": 1
        },
        {
          "Count": "{{ len .global.workflow.input.DELETEPORT }}",
          "Description": "A Parallel Loop is a control task that runs one task or one sub-workflow multiple times based on a specified count.  The count can be a static value that is specified during design time or a dynamic value that is derived from workflow inputs or task outputs.  When the loop is executed, the count 'N' is determined, N tasks or sub-workflows are scheduled for execution in parallel.  When all N instances of the task or sub-workflow reach a final state the parallel loop will complete and workflow execution will move on to the next task.  If any one of the tasks or sub-workflows fails, then the entire loop will fail.  Dynamic values for count must be specified as a template.  For example, if a loop must run for a count which matches the length of a workflow input called StringArray, then the count must be specified using a template '{{ len .global.workflow.input.StringArray }}'.  The iteration of the loop is available using the keyword '.iteration' and it can be used to control inputs that feed into the task.  For example, the task inside the loop needs to take one value from the workflow input StringArray, then the task string input can be mapped to the template '{{ index .global.workflow.input.StringArray .iteration}}' during design.",
          "Label": "For each Filter to un-assign",
          "LoopStartTask": "AssignFiltertoContractRollback1",
          "Name": "parallelLoop3",
          "NumberOfBatches": 1,
          "ObjectType": "workflow.LoopTask",
          "OnSuccess": "parallelLoop2",
          "Parallel": true
        },
        {
          "Count": "{{ len .global.workflow.input.PORT }}",
          "Description": "A Parallel Loop is a control task that runs one task or one sub-workflow multiple times based on a specified count.  The count can be a static value that is specified during design time or a dynamic value that is derived from workflow inputs or task outputs.  When the loop is executed, the count 'N' is determined, N tasks or sub-workflows are scheduled for execution in parallel.  When all N instances of the task or sub-workflow reach a final state the parallel loop will complete and workflow execution will move on to the next task.  If any one of the tasks or sub-workflows fails, then the entire loop will fail.  Dynamic values for count must be specified as a template.  For example, if a loop must run for a count which matches the length of a workflow input called StringArray, then the count must be specified using a template '{{ len .global.workflow.input.StringArray }}'.  The iteration of the loop is available using the keyword '.iteration' and it can be used to control inputs that feed into the task.  For example, the task inside the loop needs to take one value from the workflow input StringArray, then the task string input can be mapped to the template '{{ index .global.workflow.input.StringArray .iteration}}' during design.",
          "Label": "For each Filter to assign",
          "LoopStartTask": "AssignFiltertoContract1",
          "Name": "parallelLoop4",
          "NumberOfBatches": 1,
          "ObjectType": "workflow.LoopTask",
          "OnSuccess": "SuccessEndTask",
          "Parallel": true
        },
        {
          "CatalogMoid": "user",
          "InputParameters": {
            "FILTER": "Allow-{{ index .global.workflow.input.DELETEPORT .iteration}}",
            "NAME": "${workflow.input.NAME}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Assign Filter to Contract Rollback",
          "Name": "AssignFiltertoContractRollback1",
          "ObjectType": "workflow.WorkerTask",
          "TaskDefinitionName": "AssignFiltertoContractRollback",
          "Version": 1
        },
        {
          "CatalogMoid": "user",
          "InputParameters": {
            "FILTER": "Allow-{{ index .global.workflow.input.PORT .iteration}}",
            "NAME": "${workflow.input.NAME}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Assign Filter to Contract",
          "Name": "AssignFiltertoContract1",
          "ObjectType": "workflow.WorkerTask",
          "TaskDefinitionName": "AssignFiltertoContract",
          "Version": 1
        }
      ],
      "UiInputFilters": [],
      "UiRenderingData": {
        "Positions": [
          {
            "Name": "StartTask",
            "X": 273.5,
            "Y": 35.5
          },
          {
            "Name": "SuccessEndTask",
            "X": 273.5,
            "Y": 935
          },
          {
            "Name": "FailureEndTask",
            "X": 415.5,
            "Y": 935
          },
          {
            "Name": "parallelLoop1",
            "X": 178.5,
            "Y": 107
          },
          {
            "Name": "CreateaFilterRollback1",
            "X": 189,
            "Y": 198
          },
          {
            "Name": "parallelLoop2",
            "X": 178.5,
            "Y": 521
          },
          {
            "Name": "CreateaFilter1",
            "X": 188.5,
            "Y": 612
          },
          {
            "Name": "parallelLoop3",
            "X": 178.5,
            "Y": 314
          },
          {
            "Name": "parallelLoop4",
            "X": 178.5,
            "Y": 728
          },
          {
            "Name": "AssignFiltertoContractRollback1",
            "X": 189,
            "Y": 405
          },
          {
            "Name": "AssignFiltertoContract1",
            "X": 189,
            "Y": 819
          }
        ]
      },
      "VariableDefinition": [],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/WorkflowDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"vzFilter\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.NAME}}/flt-Allow-{{.global.task.input.PORT}}\",\n      \"name\": \"Allow-{{.global.task.input.PORT}}\",\n      \"rn\": \"flt-Allow-{{.global.task.input.PORT}}\",\n      \"status\": \"deleted,modified\"\n    },\n    \"children\": [\n      {\n        \"vzEntry\": {\n          \"attributes\": {\n            \"dn\": \"uni/tn-{{.global.task.input.NAME}}/flt-Allow-{{.global.task.input.PORT}}/e-Allow-{{.global.task.input.PORT}}\",\n            \"name\": \"Allow-{{.global.task.input.PORT}}\",\n            \"etherT\": \"ipv4\",\n            \"prot\": \"tcp\",\n            \"dFromPort\": \"{{.global.task.input.PORT}}\",\n            \"dToPort\": \"{{.global.task.input.PORT}}\",\n            \"rn\": \"e-Allow-{{.global.task.input.PORT}}\",\n            \"status\": \"deleted,modified\"\n          },\n          \"children\": []\n        }\n      }\n    ]\n  }\n}\n",
          "ContentType": "json",
          "Description": "Creates a filter for the contract within the EPGs",
          "EndpointRequestType": "Internal",
          "Label": "Create Filter",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/flt-Allow-{{.global.task.input.PORT}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a filter",
      "Name": "Create a Filter Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateaFilterRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"vzFilter\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.NAME}}/flt-Allow-{{.global.task.input.PORT}}\",\n      \"name\": \"Allow-{{.global.task.input.PORT}}\",\n      \"rn\": \"flt-Allow-{{.global.task.input.PORT}}\",\n      \"status\": \"created,modified\"\n    },\n    \"children\": [\n      {\n        \"vzEntry\": {\n          \"attributes\": {\n            \"dn\": \"uni/tn-{{.global.task.input.NAME}}/flt-Allow-{{.global.task.input.PORT}}/e-Allow-{{.global.task.input.PORT}}\",\n            \"name\": \"Allow-{{.global.task.input.PORT}}\",\n            \"etherT\": \"ipv4\",\n            \"prot\": \"tcp\",\n            \"dFromPort\": \"{{.global.task.input.PORT}}\",\n            \"dToPort\": \"{{.global.task.input.PORT}}\",\n            \"rn\": \"e-Allow-{{.global.task.input.PORT}}\",\n            \"status\": \"created,modified\"\n          },\n          \"children\": []\n        }\n      }\n    ]\n  }\n}\n",
          "ContentType": "json",
          "Description": "Creates a filter for the contract within the EPGs",
          "EndpointRequestType": "Internal",
          "Label": "Create Filter",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/flt-Allow-{{.global.task.input.PORT}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a filter",
      "Name": "Create a Filter",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateaFilter\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"vzSubj\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.NAME}}/brc-Public-to-Private/subj-{{.global.task.input.FILTER}}\",\n      \"name\": \"{{.global.task.input.FILTER}}\",\n      \"rn\": \"subj-{{.global.task.input.FILTER}}\",\n      \"status\": \"deleted\"\n    },\n    \"children\": [\n      {\n        \"vzRsSubjFiltAtt\": {\n          \"attributes\": {\n            \"status\": \"deleted,modified\",\n            \"tnVzFilterName\": \"{{.global.task.input.FILTER}}\",\n            \"directives\": \"\"\n          },\n          \"children\": []\n        }\n      }\n    ]\n  }\n}",
          "ContentType": "json",
          "Description": "Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n",
          "EndpointRequestType": "Internal",
          "Label": "assign Private Contract",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/brc-Public-to-Private/subj-{{.global.task.input.FILTER}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Name": "Assign Filter to Contract Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"AssignFiltertoContractRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"vzSubj\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.NAME}}/brc-Public-to-Private/subj-{{.global.task.input.FILTER}}\",\n      \"name\": \"{{.global.task.input.FILTER}}\",\n      \"rn\": \"subj-{{.global.task.input.FILTER}}\",\n      \"status\": \"created\"\n    },\n    \"children\": [\n      {\n        \"vzRsSubjFiltAtt\": {\n          \"attributes\": {\n            \"status\": \"created,modified\",\n            \"tnVzFilterName\": \"{{.global.task.input.FILTER}}\",\n            \"directives\": \"\"\n          },\n          \"children\": []\n        }\n      }\n    ]\n  }\n}",
          "ContentType": "json",
          "Description": "Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n",
          "EndpointRequestType": "Internal",
          "Label": "assign filter to Contract",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/brc-Public-to-Private/subj-{{.global.task.input.FILTER}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Name": "assign Filter to Contract",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"AssignFiltertoContract\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  }
]