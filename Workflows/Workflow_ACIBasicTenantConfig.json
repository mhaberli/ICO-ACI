[
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a tenant in ACI",
      "Label": "Create Tenant Rollback",
      "Name": "CreateTenantRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a tenant in ACI",
      "Label": "Create Tenant",
      "Name": "CreateTenant",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "Description": "Creates a tenant in ACI",
          "InputParameters": {
            "NAME": "${task.input.NAME}",
            "Target": "${task.input.Target}"
          },
          "Name": "CreateTenantRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a VRF in ACI",
      "Label": "Create VRF Rollback",
      "Name": "CreateVRFRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Tenant",
            "Name": "TENANT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the VRF",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "VRF",
            "Name": "VRF",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a VRF in ACI",
      "Label": "Create VRF",
      "Name": "CreateVRF",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Tenant",
            "Name": "TENANT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the VRF",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "VRF",
            "Name": "VRF",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "Description": "Creates a VRF in ACI",
          "InputParameters": {
            "TENANT": "${task.input.TENANT}",
            "Target": "${task.input.Target}",
            "VRF": "${task.input.VRF}"
          },
          "Name": "CreateVRFRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a BD in ACI",
      "Label": "Create BD Rollback",
      "Name": "CreateBDRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Tenant",
            "Name": "TENANT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Creates a subnet for the BD (Example: 10.10.10.10/24)",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Subnet",
            "Name": "SUBNET",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the BD",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "BD",
            "Name": "BD",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The VRF which will be assigned",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "VRF",
            "Name": "VRF",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a BD in ACI",
      "Label": "Create BD",
      "Name": "CreateBD",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Tenant",
            "Name": "TENANT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Creates a subnet for the BD (Example: 10.10.10.10/24)",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Subnet",
            "Name": "SUBNET",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the BD",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "BD",
            "Name": "BD",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The VRF which will be assigned",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "VRF",
            "Name": "VRF",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "Description": "Creates a BD in ACI",
          "InputParameters": {
            "BD": "${task.input.BD}",
            "SUBNET": "${task.input.SUBNET}",
            "TENANT": "${task.input.TENANT}",
            "Target": "${task.input.Target}",
            "VRF": "${task.input.VRF}"
          },
          "Name": "CreateBDRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates an Application",
      "Label": "Create Application Profile Rollback",
      "Name": "CreateApplicationProfileRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Application Profile ",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates an Application",
      "Label": "Create Application Profile in ACI",
      "Name": "AP",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Application Profile ",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "Description": "Creates an Application",
          "InputParameters": {
            "NAME": "${task.input.NAME}",
            "Target": "${task.input.Target}"
          },
          "Name": "CreateApplicationProfileRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Create an EPG",
      "Label": "Create EPG Rollback",
      "Name": "CreateEPGRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Tenant",
            "Name": "TENANT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of Application Profile",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Application Profile",
            "Name": "AP",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the EPG",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "EPG",
            "Name": "EPG",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Create an EPG",
      "Label": "Create EPG",
      "Name": "CreateEPG",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Tenant",
            "Name": "TENANT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of Application Profile",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Application Profile",
            "Name": "AP",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the EPG",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "EPG",
            "Name": "EPG",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "Description": "Create an EPG",
          "InputParameters": {
            "AP": "${task.input.AP}",
            "EPG": "${task.input.EPG}",
            "TENANT": "${task.input.TENANT}",
            "Target": "${task.input.Target}"
          },
          "Name": "CreateEPGRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a contract",
      "Label": "Create Contract Rollback",
      "Name": "CreateContractRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the contract",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Deletes a contract",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Contract Name",
            "Name": "CONTRACT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a contract between EPGs",
      "Label": "Create Contract",
      "Name": "CreateContract",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the contract",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the contract",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Contract Name ",
            "Name": "CONTRACT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "Description": "Creates a contract",
          "InputParameters": {
            "CONTRACT": "${task.input.CONTRACT}",
            "NAME": "${task.input.NAME}",
            "Target": "${task.input.Target}"
          },
          "Name": "CreateContractRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a filter",
      "Label": "Create a Filter Rollback",
      "Name": "CreateaFilterRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Specify a port for the filter (Example: 443)",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Port",
            "Name": "PORT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a filter",
      "Label": "Create a Filter",
      "Name": "CreateaFilter",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Specify a port for the filter (Example: 443)",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Port",
            "Name": "PORT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "Description": "Creates a filter",
          "InputParameters": {
            "NAME": "${task.input.NAME}",
            "PORT": "${task.input.PORT}",
            "Target": "${task.input.Target}"
          },
          "Name": "CreateaFilterRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a contract between EPGs",
      "Label": "Assign Contract Rollback",
      "Name": "AssignContractRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the contract",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a contract between EPGs",
      "Label": "Assign Provider Contract Rollback",
      "Name": "AssignProviderContractRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the contract",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Tenant",
            "Name": "TENANT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "AP",
            "Name": "AP",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "EPG",
            "Name": "EPG",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "Description": "Creates a contract between EPGs",
          "InputParameters": {
            "NAME": "${task.input.NAME}",
            "Target": "${task.input.Target}"
          },
          "Name": "AssignContractRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Creates a contract between EPGs",
      "Label": "Assign Provider Contract",
      "Name": "AssignProviderContract",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the contract",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Tenant",
            "Name": "TENANT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "AP",
            "Name": "AP",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "EPG",
            "Name": "EPG",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "Description": "Creates a contract between EPGs",
          "InputParameters": {
            "AP": "${task.input.AP}",
            "EPG": "${task.input.EPG}",
            "NAME": "${task.input.NAME}",
            "TENANT": "${task.input.TENANT}",
            "Target": "${task.input.Target}"
          },
          "Name": "AssignProviderContractRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Assign Consumer EPG to Contract",
      "Label": "Assign Consumer Contract Rollback",
      "Name": "AssignConsumerContractRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the contract",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "AP",
            "Name": "AP",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "EPG",
            "Name": "EPG",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Tenant",
            "Name": "TENANT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "Description": "Creates a contract between EPGs",
          "InputParameters": {
            "NAME": "${task.input.NAME}",
            "Target": "${task.input.Target}"
          },
          "Name": "AssignContractRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Assign Consumer EPG to Contract",
      "Label": "Assign Consumer Contract",
      "Name": "AssignConsumerContract",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the contract",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "AP",
            "Name": "AP",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "EPG",
            "Name": "EPG",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Tenant",
            "Name": "TENANT",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "Description": "Assign Consumer EPG to Contract",
          "InputParameters": {
            "AP": "${task.input.AP}",
            "EPG": "${task.input.EPG}",
            "NAME": "${task.input.NAME}",
            "TENANT": "${task.input.TENANT}",
            "Target": "${task.input.Target}"
          },
          "Name": "AssignConsumerContractRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Label": "Assign Filter to Contract Rollback",
      "Name": "AssignFiltertoContractRollback",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Filter",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "FILTER",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "NameTenant",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Label": "Assign Filter to Contract",
      "Name": "AssignFiltertoContract",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Filter",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name",
            "Name": "FILTER",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Tenant",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "NameTenant",
            "Name": "NAME",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [],
        "RetryCount": 3,
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 600,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "user",
          "InputParameters": {
            "FILTER": "${task.input.FILTER}",
            "NAME": "${task.input.NAME}",
            "Target": "${task.input.Target}"
          },
          "Name": "AssignFiltertoContractRollback",
          "ObjectType": "workflow.RollbackTask",
          "Version": 1
        }
      ],
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "project",
          "Value": "devnet"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.WorkflowDefinition",
      "DefaultVersion": true,
      "Description": "Creates a Tenant, VRF, BD, AP, 2 EPGs, Contract, Filters",
      "InputDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Name of the Tenant",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Name",
          "Name": "NAME",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints",
              "Regex": "^([A-Za-z0-9_-])+$"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        },
        {
          "ArrayItemType": {
            "ObjectType": "workflow.PrimitiveArrayItem",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Specify a port for the filter (Example: 443)",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Port",
          "Max": 99,
          "Min": 1,
          "Name": "PORT",
          "ObjectType": "workflow.ArrayDataType",
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "adress/mask (Example: 10.10.10.1/24)",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Gateway IP",
          "Name": "SUBNET",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints",
              "Regex": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/\\d+$"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        },
        {
          "CustomDataTypeProperties": {
            "CatalogMoid": "shared",
            "ObjectType": "workflow.CustomDataProperty"
          },
          "Default": {
            "ObjectType": "workflow.DefaultValue",
            "Override": true
          },
          "Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "External Target",
          "Name": "Target",
          "ObjectType": "workflow.TargetDataType",
          "Properties": [
            {
              "DisplayAttributes": [
                "Name",
                "TargetType"
              ],
              "ObjectType": "workflow.TargetProperty",
              "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice) and Status eq Connected))",
              "SelectorProperty": {
                "Method": "GET",
                "ObjectType": "workflow.SelectorProperty"
              },
              "SupportedObjects": [
                "asset.Target"
              ]
            }
          ],
          "Required": true
        }
      ],
      "InputParameterSet": [],
      "Label": "ACI Basic Tenant Config",
      "Name": "ACIBasicTenantConfig",
      "ObjectType": "workflow.WorkflowDefinition",
      "OutputDefinition": [],
      "Properties": {
        "EnableDebug": true,
        "ExternalMeta": true,
        "ObjectType": "workflow.WorkflowProperties",
        "SupportStatus": "Supported"
      },
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "category",
          "Value": "ACI"
        }
      ],
      "Tasks": [
        {
          "Name": "StartTask",
          "NextTask": "CreateTenant1",
          "ObjectType": "workflow.StartTask"
        },
        {
          "CatalogMoid": "user",
          "Description": "Creates a tenant in ACI",
          "InputParameters": {
            "NAME": "${workflow.input.NAME}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Create Tenant",
          "Name": "CreateTenant1",
          "ObjectType": "workflow.WorkerTask",
          "OnSuccess": "CreateVRF1",
          "TaskDefinitionName": "CreateTenant",
          "Version": 1
        },
        {
          "CatalogMoid": "user",
          "Description": "Creates a VRF in ACI",
          "InputParameters": {
            "TENANT": "${workflow.input.NAME}",
            "Target": "${workflow.input.Target}",
            "VRF": "${workflow.input.NAME}"
          },
          "Label": "Create VRF",
          "Name": "CreateVRF1",
          "ObjectType": "workflow.WorkerTask",
          "OnSuccess": "CreateBD1",
          "TaskDefinitionName": "CreateVRF",
          "Version": 1
        },
        {
          "CatalogMoid": "user",
          "Description": "Creates a BD in ACI",
          "InputParameters": {
            "BD": "${workflow.input.NAME}",
            "SUBNET": "${workflow.input.SUBNET}",
            "TENANT": "${workflow.input.NAME}",
            "Target": "${workflow.input.Target}",
            "VRF": "${workflow.input.NAME}"
          },
          "Label": "Create BD",
          "Name": "CreateBD1",
          "ObjectType": "workflow.WorkerTask",
          "OnSuccess": "AP1",
          "TaskDefinitionName": "CreateBD",
          "Version": 1
        },
        {
          "CatalogMoid": "user",
          "Description": "Creates an Application Profile with 2 EPGs",
          "InputParameters": {
            "NAME": "${workflow.input.NAME}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Create Application Profile in ACI",
          "Name": "AP1",
          "ObjectType": "workflow.WorkerTask",
          "OnSuccess": "CreateEPG1",
          "TaskDefinitionName": "AP",
          "Version": 1
        },
        {
          "CatalogMoid": "user",
          "Description": "Create an EPG",
          "InputParameters": {
            "AP": "${workflow.input.NAME}",
            "EPG": "Public-EPG",
            "TENANT": "${workflow.input.NAME}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Create Public-EPG",
          "Name": "CreateEPG1",
          "ObjectType": "workflow.WorkerTask",
          "OnSuccess": "CreateEPG2",
          "TaskDefinitionName": "CreateEPG",
          "Version": 1
        },
        {
          "CatalogMoid": "user",
          "Description": "Create an EPG",
          "InputParameters": {
            "AP": "${workflow.input.NAME}",
            "EPG": "Private-EPG",
            "TENANT": "${workflow.input.NAME}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Create Private-EPG",
          "Name": "CreateEPG2",
          "ObjectType": "workflow.WorkerTask",
          "OnSuccess": "CreateContract1",
          "TaskDefinitionName": "CreateEPG",
          "Version": 1
        },
        {
          "CatalogMoid": "user",
          "Description": "Creates a contract between EPGs",
          "InputParameters": {
            "CONTRACT": "Public-to-Private",
            "NAME": "${workflow.input.NAME}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Create Contract",
          "Name": "CreateContract1",
          "ObjectType": "workflow.WorkerTask",
          "OnSuccess": "parallelLoop1",
          "TaskDefinitionName": "CreateContract",
          "Version": 1
        },
        {
          "Count": "{{ len .global.workflow.input.PORT }}",
          "Description": "A Parallel Loop is a control task that runs one task or one sub-workflow multiple times based on a specified count.  The count can be a static value that is specified during design time or a dynamic value that is derived from workflow inputs or task outputs.  When the loop is executed, the count 'N' is determined, N tasks or sub-workflows are scheduled for execution in parallel.  When all N instances of the task or sub-workflow reach a final state the parallel loop will complete and workflow execution will move on to the next task.  If any one of the tasks or sub-workflows fails, then the entire loop will fail.  Dynamic values for count must be specified as a template.  For example, if a loop must run for a count which matches the length of a workflow input called StringArray, then the count must be specified using a template '{{ len .global.workflow.input.StringArray }}'.  The iteration of the loop is available using the keyword '.iteration' and it can be used to control inputs that feed into the task.  For example, the task inside the loop needs to take one value from the workflow input StringArray, then the task string input can be mapped to the template '{{ index .global.workflow.input.StringArray .iteration}}' during design.",
          "Label": "For each Filter",
          "LoopStartTask": "CreateaFilter2",
          "Name": "parallelLoop1",
          "NumberOfBatches": 1,
          "ObjectType": "workflow.LoopTask",
          "OnSuccess": "parallelLoop2",
          "Parallel": true
        },
        {
          "CatalogMoid": "user",
          "Description": "Creates a filter",
          "InputParameters": {
            "NAME": "${workflow.input.NAME}",
            "PORT": "{{ index .global.workflow.input.PORT .iteration}}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Create a Filter",
          "Name": "CreateaFilter2",
          "ObjectType": "workflow.WorkerTask",
          "TaskDefinitionName": "CreateaFilter",
          "Version": 1
        },
        {
          "Count": "{{ len .global.workflow.input.PORT }}",
          "Description": "A Parallel Loop is a control task that runs one task or one sub-workflow multiple times based on a specified count.  The count can be a static value that is specified during design time or a dynamic value that is derived from workflow inputs or task outputs.  When the loop is executed, the count 'N' is determined, N tasks or sub-workflows are scheduled for execution in parallel.  When all N instances of the task or sub-workflow reach a final state the parallel loop will complete and workflow execution will move on to the next task.  If any one of the tasks or sub-workflows fails, then the entire loop will fail.  Dynamic values for count must be specified as a template.  For example, if a loop must run for a count which matches the length of a workflow input called StringArray, then the count must be specified using a template '{{ len .global.workflow.input.StringArray }}'.  The iteration of the loop is available using the keyword '.iteration' and it can be used to control inputs that feed into the task.  For example, the task inside the loop needs to take one value from the workflow input StringArray, then the task string input can be mapped to the template '{{ index .global.workflow.input.StringArray .iteration}}' during design.",
          "Label": "For each Filter assignment",
          "LoopStartTask": "AssignFiltertoContract1",
          "Name": "parallelLoop2",
          "NumberOfBatches": 1,
          "ObjectType": "workflow.LoopTask",
          "OnSuccess": "AssignConsumerContract1",
          "Parallel": true
        },
        {
          "CatalogMoid": "user",
          "Description": "Creates a contract between EPGs",
          "InputParameters": {
            "AP": "${workflow.input.NAME}",
            "EPG": "Private-EPG",
            "NAME": "Public-to-Private",
            "TENANT": "${workflow.input.NAME}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Assign Provider Contract",
          "Name": "AssignProviderContract1",
          "ObjectType": "workflow.WorkerTask",
          "OnSuccess": "SuccessEndTask",
          "TaskDefinitionName": "AssignProviderContract",
          "Version": 1
        },
        {
          "Name": "SuccessEndTask",
          "ObjectType": "workflow.SuccessEndTask"
        },
        {
          "Name": "FailureEndTask",
          "ObjectType": "workflow.FailureEndTask"
        },
        {
          "CatalogMoid": "user",
          "Description": "Assign Consumer EPG to Contract",
          "InputParameters": {
            "AP": "${workflow.input.NAME}",
            "EPG": "Public-EPG",
            "NAME": "Public-to-Private",
            "TENANT": "${workflow.input.NAME}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Assign Consumer Contract",
          "Name": "AssignConsumerContract1",
          "ObjectType": "workflow.WorkerTask",
          "OnSuccess": "AssignProviderContract1",
          "TaskDefinitionName": "AssignConsumerContract",
          "Version": 1
        },
        {
          "CatalogMoid": "user",
          "InputParameters": {
            "FILTER": "Allow-{{ index .global.workflow.input.PORT .iteration}}",
            "NAME": "${workflow.input.NAME}",
            "Target": "${workflow.input.Target}"
          },
          "Label": "Assign Filter to Contract",
          "Name": "AssignFiltertoContract1",
          "ObjectType": "workflow.WorkerTask",
          "TaskDefinitionName": "AssignFiltertoContract",
          "Version": 1
        }
      ],
      "UiInputFilters": [],
      "UiRenderingData": {
        "Positions": [
          {
            "Name": "StartTask",
            "X": 195.44588963181656,
            "Y": -54.20469756363816
          },
          {
            "Name": "SuccessEndTask",
            "X": 195.44588963181656,
            "Y": 1222.795302436362
          },
          {
            "Name": "FailureEndTask",
            "X": 337.4458896318166,
            "Y": 1222.795302436362
          },
          {
            "Name": "CreateTenant1",
            "X": 110.44588963181658,
            "Y": 16.795302436361823
          },
          {
            "Name": "AP1",
            "X": 110.44588963181658,
            "Y": 280.79530243636185
          },
          {
            "Name": "parallelLoop1",
            "X": 100.4458896318166,
            "Y": 632.7953024363617
          },
          {
            "Name": "CreateaFilter2",
            "X": 354.5,
            "Y": 513.5
          },
          {
            "Name": "CreateContract1",
            "X": 110.44588963181658,
            "Y": 544.7953024363617
          },
          {
            "Name": "parallelLoop2",
            "X": 100.4458896318166,
            "Y": 839.7953024363617
          },
          {
            "Name": "CreateEPG1",
            "X": 110.44588963181658,
            "Y": 368.79530243636185
          },
          {
            "Name": "CreateEPG2",
            "X": 110.44588963181658,
            "Y": 456.7953024363618
          },
          {
            "Name": "CreateVRF1",
            "X": 110.44588963181658,
            "Y": 104.79530243636181
          },
          {
            "Name": "CreateBD1",
            "X": 110.44588963181658,
            "Y": 192.7953024363618
          },
          {
            "Name": "AssignProviderContract1",
            "X": 110.44588963181658,
            "Y": 1134.795302436362
          },
          {
            "Name": "AssignConsumerContract1",
            "X": 110.44588963181658,
            "Y": 1046.795302436362
          },
          {
            "Name": "AssignFiltertoContract1",
            "X": 354.5,
            "Y": 720.5
          }
        ]
      },
      "VariableDefinition": [],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/WorkflowDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvTenant\": {\n    \"attributes\": {\n      \"name\": \"{{.global.task.input.NAME}}\",\n      \"status\": \"deleted\"\n    }\n  }\n}",
          "ContentType": "json",
          "Description": "InvokeGenericWebApi",
          "EndpointRequestType": "Internal",
          "Label": "CreateTenant",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/mo/uni.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a tenant in ACI",
      "Name": "Create Tenant Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateTenantRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvTenant\": {\n    \"attributes\": {\n      \"name\": \"{{.global.task.input.NAME}}\"\n    }\n  }\n}",
          "ContentType": "json",
          "Description": "InvokeGenericWebApi",
          "EndpointRequestType": "Internal",
          "Label": "CreateTenant",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/mo/uni.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a tenant in ACI",
      "Name": "Create Tenant",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateTenant\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvCtx\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.TENANT}}/ctx-{{.global.task.input.VRF}}\",\n      \"name\": \"{{.global.task.input.VRF}}\",\n      \"rn\": \"ctx-{{.global.task.input.VRF}}\",\n      \"status\": \"deleted\"\n    },\n    \"children\": []\n  }\n}",
          "ContentType": "json",
          "Description": "Creates a VRF in ACI",
          "EndpointRequestType": "Internal",
          "Label": "Create VRF",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.TENANT}}/ctx-{{.global.task.input.VRF}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a VRF in ACI",
      "Name": "Create VRF Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateVRFRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvCtx\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.TENANT}}/ctx-{{.global.task.input.VRF}}\",\n      \"name\": \"{{.global.task.input.VRF}}\",\n      \"rn\": \"ctx-{{.global.task.input.VRF}}\",\n      \"status\": \"created\"\n    },\n    \"children\": []\n  }\n}",
          "ContentType": "json",
          "Description": "Creates a VRF in ACI",
          "EndpointRequestType": "Internal",
          "Label": "Create VRF",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.TENANT}}/ctx-{{.global.task.input.VRF}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a VRF in ACI",
      "Name": "Create VRF",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateVRF\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvBD\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.TENANT}}/BD-{{.global.task.input.BD}}\",\n      \"mac\": \"00:22:BD:F8:19:FF\",\n      \"arpFlood\": \"true\",\n      \"name\": \"{{.global.task.input.BD}}\",\n      \"rn\": \"BD-{{.global.task.input.BD}}\",\n      \"status\": \"deleted\"\n    },\n    \"children\": [\n      {\n        \"fvSubnet\": {\n          \"attributes\": {\n            \"dn\": \"uni/tn-{{.global.task.input.TENANT}}/BD-{{.global.task.input.BD}}/subnet-[{{.global.task.input.SUBNET}}]\",\n            \"ctrl\": \"\",\n            \"ip\": \"{{.global.task.input.SUBNET}}\",\n            \"rn\": \"subnet-[{{.global.task.input.SUBNET}}]\",\n            \"status\": \"deleted\"\n          },\n          \"children\": []\n        }\n      },\n      {\n        \"fvRsCtx\": {\n          \"attributes\": {\n            \"tnFvCtxName\": \"{{.global.task.input.VRF}}\",\n            \"status\": \"deleted,modified\"\n          },\n          \"children\": []\n        }\n      }\n    ]\n  }\n}",
          "ContentType": "json",
          "Description": "Creates a BD",
          "EndpointRequestType": "Internal",
          "Label": "Create BD",
          "Method": "POST",
          "Name": "InvokeGenericWebApi2",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.TENANT}}/BD-{{.global.task.input.BD}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a BD in ACI",
      "Name": "Create BD Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateBDRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvBD\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.TENANT}}/BD-{{.global.task.input.BD}}\",\n      \"mac\": \"00:22:BD:F8:19:FF\",\n      \"arpFlood\": \"true\",\n      \"name\": \"{{.global.task.input.BD}}\",\n      \"rn\": \"BD-{{.global.task.input.BD}}\",\n      \"status\": \"created\"\n    },\n    \"children\": [\n      {\n        \"fvSubnet\": {\n          \"attributes\": {\n            \"dn\": \"uni/tn-{{.global.task.input.TENANT}}/BD-{{.global.task.input.BD}}/subnet-[{{.global.task.input.SUBNET}}]\",\n            \"ctrl\": \"\",\n            \"ip\": \"{{.global.task.input.SUBNET}}\",\n            \"rn\": \"subnet-[{{.global.task.input.SUBNET}}]\",\n            \"status\": \"created\"\n          },\n          \"children\": []\n        }\n      },\n      {\n        \"fvRsCtx\": {\n          \"attributes\": {\n            \"tnFvCtxName\": \"{{.global.task.input.VRF}}\",\n            \"status\": \"created,modified\"\n          },\n          \"children\": []\n        }\n      }\n    ]\n  }\n}",
          "ContentType": "json",
          "Description": "Creates a BD",
          "EndpointRequestType": "Internal",
          "Label": "Create BD",
          "Method": "POST",
          "Name": "InvokeGenericWebApi2",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.TENANT}}/BD-{{.global.task.input.BD}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a BD in ACI",
      "Name": "Create BD",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateBD\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvAp\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.NAME}}/ap-{{.global.task.input.NAME}}\",\n      \"name\": \"{{.global.task.input.NAME}}\",\n      \"rn\": \"ap-{{.global.task.input.NAME}}\",\n      \"status\": \"deleted\"\n    }\n  }\n}",
          "ContentType": "json",
          "Description": "Creates an Application Profile in ACI",
          "EndpointRequestType": "Internal",
          "Label": "Create Application Profile",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/ap-{{.global.task.input.NAME}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates an Application",
      "Name": "Create Application Profile Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateApplicationProfileRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvAp\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.NAME}}/ap-{{.global.task.input.NAME}}\",\n      \"name\": \"{{.global.task.input.NAME}}\",\n      \"rn\": \"ap-{{.global.task.input.NAME}}\",\n      \"status\": \"created\"\n    }\n  }\n}",
          "ContentType": "json",
          "Description": "Creates an Application Profile in ACI",
          "EndpointRequestType": "Internal",
          "Label": "Create Application Profile",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/ap-{{.global.task.input.NAME}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates an Application",
      "Name": "Create Application Profile in ACI",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"AP\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvAEPg\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.TENANT}}/ap-{{.global.task.input.AP}}/epg-{{.global.task.input.EPG}}\",\n      \"prio\": \"level3\",\n      \"name\": \"{{.global.task.input.EPG}}\",\n      \"rn\": \"epg-{{.global.task.input.EPG}}\",\n      \"status\": \"deleted\"\n    },\n    \"children\": [\n      {\n        \"fvRsBd\": {\n          \"attributes\": {\n            \"tnFvBDName\": \"{{.global.task.input.EPG}}\",\n            \"status\": \"deleted,modified\"\n          },\n          \"children\": []\n        }\n      }\n    ]\n  }\n}",
          "ContentType": "json",
          "Description": "Creates an EPG within the Application Profile",
          "EndpointRequestType": "Internal",
          "Label": "Creates an EPG",
          "Method": "POST",
          "Name": "InvokeGenericWebApi3",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.TENANT}}/ap-{{.global.task.input.AP}}/epg-{{.global.task.input.EPG}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Create an EPG",
      "Name": "Create EPG Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateEPGRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvAEPg\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.TENANT}}/ap-{{.global.task.input.AP}}/epg-{{.global.task.input.EPG}}\",\n      \"prio\": \"level3\",\n      \"name\": \"{{.global.task.input.EPG}}\",\n      \"rn\": \"epg-{{.global.task.input.EPG}}\",\n      \"status\": \"created\"\n    },\n    \"children\": [\n      {\n        \"fvRsBd\": {\n          \"attributes\": {\n            \"tnFvBDName\": \"{{.global.task.input.EPG}}\",\n            \"status\": \"created,modified\"\n          },\n          \"children\": []\n        }\n      }\n    ]\n  }\n}",
          "ContentType": "json",
          "Description": "Creates an EPG within the Application Profile",
          "EndpointRequestType": "Internal",
          "Label": "Creates an EPG",
          "Method": "POST",
          "Name": "InvokeGenericWebApi3",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.TENANT}}/ap-{{.global.task.input.AP}}/epg-{{.global.task.input.EPG}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Create an EPG",
      "Name": "Create EPG",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateEPG\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"vzBrCP\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.NAME}}/brc-{{.global.task.input.CONTRACT}}\",\n      \"name\": \"{{.global.task.input.CONTRACT}}\",\n      \"rn\": \"brc-{{.global.task.input.CONTRACT}}\",\n      \"status\": \"deleted\"\n    },\n    \"children\": []\n  }\n}",
          "ContentType": "json",
          "Description": "Creates a contract for the EPGs",
          "EndpointRequestType": "Internal",
          "Headers": {
            "Content-Type": "application/json"
          },
          "Label": "Create Contract",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/brc-{{.global.task.input.CONTRACT}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a contract",
      "Name": "Create Contract Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateContractRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"vzBrCP\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.NAME}}/brc-{{.global.task.input.CONTRACT}}\",\n      \"name\": \"{{.global.task.input.CONTRACT}}\",\n      \"rn\": \"brc-{{.global.task.input.CONTRACT}}\",\n      \"status\": \"created\"\n    },\n    \"children\": []\n  }\n}",
          "ContentType": "json",
          "Description": "Creates a contract for the EPGs",
          "EndpointRequestType": "Internal",
          "Headers": {
            "Content-Type": "application/json"
          },
          "Label": "Create Contract",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/brc-{{.global.task.input.CONTRACT}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a contract between EPGs",
      "Name": "Create Contract",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateContract\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"vzFilter\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.NAME}}/flt-Allow-{{.global.task.input.PORT}}\",\n      \"name\": \"Allow-{{.global.task.input.PORT}}\",\n      \"rn\": \"flt-Allow-{{.global.task.input.PORT}}\",\n      \"status\": \"deleted,modified\"\n    },\n    \"children\": [\n      {\n        \"vzEntry\": {\n          \"attributes\": {\n            \"dn\": \"uni/tn-{{.global.task.input.NAME}}/flt-Allow-{{.global.task.input.PORT}}/e-Allow-{{.global.task.input.PORT}}\",\n            \"name\": \"Allow-{{.global.task.input.PORT}}\",\n            \"etherT\": \"ipv4\",\n            \"prot\": \"tcp\",\n            \"dFromPort\": \"{{.global.task.input.PORT}}\",\n            \"dToPort\": \"{{.global.task.input.PORT}}\",\n            \"rn\": \"e-Allow-{{.global.task.input.PORT}}\",\n            \"status\": \"deleted,modified\"\n          },\n          \"children\": []\n        }\n      }\n    ]\n  }\n}\n",
          "ContentType": "json",
          "Description": "Creates a filter for the contract within the EPGs",
          "EndpointRequestType": "Internal",
          "Label": "Create Filter",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/flt-Allow-{{.global.task.input.PORT}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a filter",
      "Name": "Create a Filter Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateaFilterRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"vzFilter\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.NAME}}/flt-Allow-{{.global.task.input.PORT}}\",\n      \"name\": \"Allow-{{.global.task.input.PORT}}\",\n      \"rn\": \"flt-Allow-{{.global.task.input.PORT}}\",\n      \"status\": \"created,modified\"\n    },\n    \"children\": [\n      {\n        \"vzEntry\": {\n          \"attributes\": {\n            \"dn\": \"uni/tn-{{.global.task.input.NAME}}/flt-Allow-{{.global.task.input.PORT}}/e-Allow-{{.global.task.input.PORT}}\",\n            \"name\": \"Allow-{{.global.task.input.PORT}}\",\n            \"etherT\": \"ipv4\",\n            \"prot\": \"tcp\",\n            \"dFromPort\": \"{{.global.task.input.PORT}}\",\n            \"dToPort\": \"{{.global.task.input.PORT}}\",\n            \"rn\": \"e-Allow-{{.global.task.input.PORT}}\",\n            \"status\": \"created,modified\"\n          },\n          \"children\": []\n        }\n      }\n    ]\n  }\n}\n",
          "ContentType": "json",
          "Description": "Creates a filter for the contract within the EPGs",
          "EndpointRequestType": "Internal",
          "Label": "Create Filter",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/flt-Allow-{{.global.task.input.PORT}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a filter",
      "Name": "Create a Filter",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"CreateaFilter\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvRsProv\": {\n    \"attributes\": {\n      \"tnVzBrCPName\": \"Public-to-Private\",\n      \"status\": \"deleted,modified\"\n    },\n    \"children\": []\n  }\n}\n",
          "ContentType": "json",
          "Description": "Assign it to a private EPG",
          "EndpointRequestType": "Internal",
          "Label": "Assign to private EPG",
          "Method": "POST",
          "Name": "InvokeGenericWebApi3",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/ap-{{.global.task.input.NAME}}/epg-Private-EPG.json"
        },
        {
          "Body": "{\n  \"fvRsCons\": {\n    \"attributes\": {\n      \"tnVzBrCPName\": \"Public-to-Private\",\n      \"status\": \"deleted,modified\"\n    },\n    \"children\": []\n  }\n}",
          "ContentType": "json",
          "Description": "Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n",
          "EndpointRequestType": "Internal",
          "Label": "Assign to public EPG",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/ap-{{.global.task.input.NAME}}/epg-Public-EPG.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a contract between EPGs",
      "Name": "Assign Contract Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"AssignContractRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvRsProv\": {\n    \"attributes\": {\n      \"tnVzBrCPName\": \"{{.global.task.input.NAME}}\",\n      \"status\": \"deleted,modified\"\n    },\n    \"children\": []\n  }\n}\n",
          "ContentType": "json",
          "Description": "Assign it to a private EPG",
          "EndpointRequestType": "Internal",
          "Label": "Assign to private EPG",
          "Method": "POST",
          "Name": "InvokeGenericWebApi3",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.TENANT}}/ap-{{.global.task.input.AP}}/epg-{{.global.task.input.EPG}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a contract between EPGs",
      "Name": "Assign Provider Contract Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"AssignProviderContractRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvRsProv\": {\n    \"attributes\": {\n      \"tnVzBrCPName\": \"{{.global.task.input.NAME}}\",\n      \"status\": \"created,modified\"\n    },\n    \"children\": []\n  }\n}\n",
          "ContentType": "json",
          "Description": "Assign it to a private EPG",
          "EndpointRequestType": "Internal",
          "Label": "Assign to private EPG",
          "Method": "POST",
          "Name": "InvokeGenericWebApi3",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.TENANT}}/ap-{{.global.task.input.AP}}/epg-{{.global.task.input.EPG}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Creates a contract between EPGs",
      "Name": "Assign Provider Contract",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"AssignProviderContract\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvRsCons\": {\n    \"attributes\": {\n      \"tnVzBrCPName\": \"{{.global.task.input.NAME}}\",\n      \"status\": \"deleted,modified\"\n    },\n    \"children\": []\n  }\n}",
          "ContentType": "json",
          "Description": "Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n",
          "EndpointRequestType": "Internal",
          "Label": "Assign to public EPG",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.TENANT}}/ap-{{.global.task.input.AP}}/epg-{{.global.task.input.EPG}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Assign Consumer EPG to Contract",
      "Name": "Assign Consumer Contract Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"AssignConsumerContractRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"fvRsCons\": {\n    \"attributes\": {\n      \"tnVzBrCPName\": \"{{.global.task.input.NAME}}\",\n      \"status\": \"created,modified\"\n    },\n    \"children\": []\n  }\n}",
          "ContentType": "json",
          "Description": "Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n",
          "EndpointRequestType": "Internal",
          "Label": "Assign to public EPG",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.TENANT}}/ap-{{.global.task.input.AP}}/epg-{{.global.task.input.EPG}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Assign Consumer EPG to Contract",
      "Name": "Assign Consumer Contract",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"AssignConsumerContract\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"vzSubj\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.NAME}}/brc-Public-to-Private/subj-{{.global.task.input.FILTER}}\",\n      \"name\": \"{{.global.task.input.FILTER}}\",\n      \"rn\": \"subj-{{.global.task.input.FILTER}}\",\n      \"status\": \"deleted\"\n    },\n    \"children\": [\n      {\n        \"vzRsSubjFiltAtt\": {\n          \"attributes\": {\n            \"status\": \"deleted,modified\",\n            \"tnVzFilterName\": \"{{.global.task.input.FILTER}}\",\n            \"directives\": \"\"\n          },\n          \"children\": []\n        }\n      }\n    ]\n  }\n}",
          "ContentType": "json",
          "Description": "Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n",
          "EndpointRequestType": "Internal",
          "Label": "assign Private Contract",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/brc-Public-to-Private/subj-{{.global.task.input.FILTER}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Name": "Assign Filter to Contract Rollback",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"AssignFiltertoContractRollback\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{\n  \"vzSubj\": {\n    \"attributes\": {\n      \"dn\": \"uni/tn-{{.global.task.input.NAME}}/brc-Public-to-Private/subj-{{.global.task.input.FILTER}}\",\n      \"name\": \"{{.global.task.input.FILTER}}\",\n      \"rn\": \"subj-{{.global.task.input.FILTER}}\",\n      \"status\": \"created\"\n    },\n    \"children\": [\n      {\n        \"vzRsSubjFiltAtt\": {\n          \"attributes\": {\n            \"status\": \"created,modified\",\n            \"tnVzFilterName\": \"{{.global.task.input.FILTER}}\",\n            \"directives\": \"\"\n          },\n          \"children\": []\n        }\n      }\n    ]\n  }\n}",
          "ContentType": "json",
          "Description": "Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n",
          "EndpointRequestType": "Internal",
          "Label": "assign filter to Contract",
          "Method": "POST",
          "Name": "InvokeGenericWebApi1",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [],
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Url": "/api/node/mo/uni/tn-{{.global.task.input.NAME}}/brc-Public-to-Private/subj-{{.global.task.input.FILTER}}.json"
        }
      ],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Name": "assign Filter to Contract",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {},
      "SharedScope": "user",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"AssignFiltertoContract\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  }
]